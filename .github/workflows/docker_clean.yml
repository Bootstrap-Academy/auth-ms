name: Docker Clean

on:
  delete:
  schedule:
    - cron: "0 4 * * *"
  workflow_dispatch:

env:
  OWNER: "bootstrap-academy"
  NAME: "auth-ms"
  PLATFORMS: "linux/amd64 linux/arm/v7 linux/arm64/v8 linux/s390x linux/ppc64le"

jobs:
  docker_clean:
    name: Docker Clean
    runs-on: ubuntu-latest
#   environment: docker-clean
    concurrency: docker_clean

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Clean
        env:
          GITHUB_TOKEN: ${{ secrets.CR_PAT }}
          OWNER: ${{ env.OWNER }}
          NAME: ${{ env.NAME }}
          PLATFORMS: ${{ env.PLATFORMS }}
        run: |
          set -ex

          keep=()
          add() {
            keep+=("${1}")
            for platform in ${PLATFORMS}; do
              keep+=("${1}-${platform}")
            done
          }

          add latest
          add edge

          for branch in $(git ls-remote --heads origin | cut -d/ -f3-); do
            echo Found branch: $branch
            add $branch
          done

          for tag in $(git tag); do
            echo Found tag: $tag
            add $tag
          done

          keep=$(printf '%s\n' "${keep[@]}" | tr / - | jq -R . | jq -cs .)

          URL=/users/${OWNER}/packages/container/${NAME}/versions
          page=1
          versions=$(mktemp)
          while true; do
            gh api "${URL}?per_page=100&page=${page}" | jq -c '.[]' > page
            if ! [[ -s page ]]; then break; fi
            jq -c '.metadata.container.tags as $tags | select($tags-($tags-'"$keep"')==[])' page >> $versions
            page=$((page+1))
          done

          while read version; do
            id=$(jq -r .id <<< "$version")
            name=$(jq -r .name <<< "$version")
            echo Pruning $id $name
            curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com${URL}/${id}"
          done < $versions
          echo Pruned $(jq -rs length $versions) versions
